name: stable-diffusion-cpp-wrapper

on:
  workflow_dispatch:
    inputs:
      macos:
        required: true
        type: boolean
        description: Build MacOS binaries
      windows:
        required: true
        type: boolean
        description: Build Windows binaries
      linux:
        required: true
        type: boolean
        description: Build Linux binaries

jobs:
  compile-macos:
    if: ${{ inputs.macos }}
    name: Compile (MacOS)
    runs-on: macos-latest
    strategy:
      fail-fast: true
      matrix:
        include:
          - build: 'standard'
            defines: '-DBUILD_SHARED_LIBS=ON -DSD_STANDALONE=OFF -DSD_BUILD_EXAMPLES=OFF -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64"'
    steps:
      - uses: actions/checkout@v3
        with:
          repository: drasticactions/stable-diffusion.cpp-wrapper
          submodules: 'recursive'

      - name: Dependencies
        continue-on-error: true
        run: |
          brew update

      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. ${{ matrix.defines }}
          cmake --build . --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: ./build/bin/*.dylib
          name: stable-diffusion-bin-macos-${{ matrix.build }}.dylib

  compile-windows:
    if: ${{ inputs.windows }}
    name: Compile (Windows)
    strategy:
      fail-fast: true
      matrix:
        include:
          - build: 'standard'
            defines: '-DBUILD_SHARED_LIBS=ON -DSD_STANDALONE=OFF -DSD_BUILD_EXAMPLES=OFF'
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: drasticactions/stable-diffusion.cpp-wrapper
          submodules: 'recursive'
      - name: Build
        id: cmake_build
        run: |
          mkdir build
          cd build
          cmake .. ${{ matrix.defines }}
          cmake --build . --config Release

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          path: .\build\bin\Release\*.dll
          name: stable-diffusion-bin-win-${{ matrix.build }}-x64.dll

  compile-linux:
    if: ${{ inputs.linux }}
    name: Compile (Linux)
    strategy:
      fail-fast: true
      matrix:
        include:
          - build: 'standard'
            defines: '-DBUILD_SHARED_LIBS=ON -DSD_STANDALONE=OFF -DSD_BUILD_EXAMPLES=OFF'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          repository: drasticactions/stable-diffusion.cpp-wrapper
          submodules: 'recursive'
      - name: Build
        id: cmake_build